cmake_minimum_required (VERSION 3.13)

Project(XLog CXX)

FILE(GLOB_RECURSE LOG_HEADERS *.h)
AUX_SOURCE_DIRECTORY(. LOG_SRCS)

SOURCE_GROUP("Include" FILES ${LOG_HEADERS}) 
SOURCE_GROUP("Src" FILES ${LOG_SRCS})

SET(TARGETBIN XLog)

SET(INC_PATH ${PROJECT_SOURCE_DIR}/../include)
SET(LIB_PATH ${PROJECT_SOURCE_DIR}/../lib)
SET(BIN_PATH ${PROJECT_SOURCE_DIR}/../bin)
SET(CMAKE_ARCHIVE_OUTPUT_DIRECTORY_DEBUG ${LIB_PATH})
SET(CMAKE_LIBRARY_OUTPUT_DIRECTORY_DEBUG ${LIB_PATH})
SET(CMAKE_RUNTIME_OUTPUT_DIRECTORY_DEBUG ${BIN_PATH})
SET(CMAKE_ARCHIVE_OUTPUT_DIRECTORY_RELEASE ${LIB_PATH})
SET(CMAKE_LIBRARY_OUTPUT_DIRECTORY_RELEASE ${LIB_PATH})
SET(CMAKE_RUNTIME_OUTPUT_DIRECTORY_RELEASE ${BIN_PATH})

ADD_DEFINITIONS(-DLIB_LOG_EXPORT)
ADD_DEFINITIONS(-D_CRT_SECURE_NO_WARNINGS)

SET(COMMONS_DIR ../../../HTA_Commons)
SET(MTHREAD_INC_DIR ${COMMONS_DIR}/MThread/include)
SET(MTHREAD_LIB_DIR ${COMMONS_DIR}/MThread/lib)
SET(MTHREAD_LIB "MThread64$<$<CONFIG:Debug>:D>")

ADD_LIBRARY(${TARGETBIN} SHARED ${LOG_HEADERS} ${LOG_SRCS})

IF (CMAKE_SYSTEM_NAME MATCHES "Linux")
	MESSAGE(STATUS "Current platform: Linux ")
	
	SET(CMAKE_CXX_FLAGS_DEBUG "$ENV{CXXFLAGS} -g -O0")
	SET(CMAKE_CXX_FLAGS_RELEASE "$ENV{CXXFLAGS} -O3")	
	SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -fPIC -Wall -pthread")
	
	IF(USE_32BITS)				
		MESSAGE(STATUS "Using 32bits")
		SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -m32")		
	ELSE()	
		MESSAGE(STATUS "Using 64bits")
		SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -m64")
	ENDIF()

ELSEIF (CMAKE_SYSTEM_NAME MATCHES "Windows")
	MESSAGE(STATUS "Current platform: Windows")
	
	SET(CMAKE_CONFIGURATION_TYPES Debug Release)
	ADD_DEFINITIONS(-D_CRT_SECURE_NO_WARNINGS)
ENDIF()

SET_TARGET_PROPERTIES(${TARGETBIN} PROPERTIES OUTPUT_NAME "${TARGETBIN}${ARCH}$<$<CONFIG:Debug>:D>")
TARGET_INCLUDE_DIRECTORIES(${TARGETBIN} PRIVATE ${MTHREAD_INC_DIR})
TARGET_LINK_DIRECTORIES(${TARGETBIN} PRIVATE ${MTHREAD_LIB_DIR})

TARGET_LINK_LIBRARIES(${TARGETBIN} PRIVATE ${MTHREAD_LIB})

FILE(COPY  IXLog.h DESTINATION ${INC_PATH})
